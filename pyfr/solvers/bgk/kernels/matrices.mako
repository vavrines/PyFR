# -*- coding: utf-8 -*-
<%inherit file='base'/>
<%namespace module='pyfr.backends.base.makoutil' name='pyfr'/>

<%pyfr:macro name='compute_4x4inverse' params='M, Minv'>
fpdtype_t A2323 = M[2][2] * M[3][3] - M[2][3] * M[3][2] ;
fpdtype_t A1323 = M[2][1] * M[3][3] - M[2][3] * M[3][1] ;
fpdtype_t A1223 = M[2][1] * M[3][2] - M[2][2] * M[3][1] ;
fpdtype_t A0323 = M[2][0] * M[3][3] - M[2][3] * M[3][0] ;
fpdtype_t A0223 = M[2][0] * M[3][2] - M[2][2] * M[3][0] ;
fpdtype_t A0123 = M[2][0] * M[3][1] - M[2][1] * M[3][0] ;
fpdtype_t A2313 = M[1][2] * M[3][3] - M[1][3] * M[3][2] ;
fpdtype_t A1313 = M[1][1] * M[3][3] - M[1][3] * M[3][1] ;
fpdtype_t A1213 = M[1][1] * M[3][2] - M[1][2] * M[3][1] ;
fpdtype_t A2312 = M[1][2] * M[2][3] - M[1][3] * M[2][2] ;
fpdtype_t A1312 = M[1][1] * M[2][3] - M[1][3] * M[2][1] ;
fpdtype_t A1212 = M[1][1] * M[2][2] - M[1][2] * M[2][1] ;
fpdtype_t A0313 = M[1][0] * M[3][3] - M[1][3] * M[3][0] ;
fpdtype_t A0213 = M[1][0] * M[3][2] - M[1][2] * M[3][0] ;
fpdtype_t A0312 = M[1][0] * M[2][3] - M[1][3] * M[2][0] ;
fpdtype_t A0212 = M[1][0] * M[2][2] - M[1][2] * M[2][0] ;
fpdtype_t A0113 = M[1][0] * M[3][1] - M[1][1] * M[3][0] ;
fpdtype_t A0112 = M[1][0] * M[2][1] - M[1][1] * M[2][0] ;

fpdtype_t det = M[0][0] * ( M[1][1] * A2323 - M[1][2] * A1323 + M[1][3] * A1223 ) 
	- M[0][1] * ( M[1][0] * A2323 - M[1][2] * A0323 + M[1][3] * A0223 ) 
	+ M[0][2] * ( M[1][0] * A1323 - M[1][1] * A0323 + M[1][3] * A0123 ) 
	- M[0][3] * ( M[1][0] * A1223 - M[1][1] * A0223 + M[1][2] * A0123 ) ;
det = 1.0 / det;

Minv[0][0] = det *   ( M[1][1] * A2323 - M[1][2] * A1323 + M[1][3] * A1223 );
Minv[0][1] = det * - ( M[0][1] * A2323 - M[0][2] * A1323 + M[0][3] * A1223 );
Minv[0][2] = det *   ( M[0][1] * A2313 - M[0][2] * A1313 + M[0][3] * A1213 );
Minv[0][3] = det * - ( M[0][1] * A2312 - M[0][2] * A1312 + M[0][3] * A1212 );
Minv[1][0] = det * - ( M[1][0] * A2323 - M[1][2] * A0323 + M[1][3] * A0223 );
Minv[1][1] = det *   ( M[0][0] * A2323 - M[0][2] * A0323 + M[0][3] * A0223 );
Minv[1][2] = det * - ( M[0][0] * A2313 - M[0][2] * A0313 + M[0][3] * A0213 );
Minv[1][3] = det *   ( M[0][0] * A2312 - M[0][2] * A0312 + M[0][3] * A0212 );
Minv[2][0] = det *   ( M[1][0] * A1323 - M[1][1] * A0323 + M[1][3] * A0123 );
Minv[2][1] = det * - ( M[0][0] * A1323 - M[0][1] * A0323 + M[0][3] * A0123 );
Minv[2][2] = det *   ( M[0][0] * A1313 - M[0][1] * A0313 + M[0][3] * A0113 );
Minv[2][3] = det * - ( M[0][0] * A1312 - M[0][1] * A0312 + M[0][3] * A0112 );
Minv[3][0] = det * - ( M[1][0] * A1223 - M[1][1] * A0223 + M[1][2] * A0123 );
Minv[3][1] = det *   ( M[0][0] * A1223 - M[0][1] * A0223 + M[0][2] * A0123 );
Minv[3][2] = det * - ( M[0][0] * A1213 - M[0][1] * A0213 + M[0][2] * A0113 );
Minv[3][3] = det *   ( M[0][0] * A1212 - M[0][1] * A0212 + M[0][2] * A0112 );
</%pyfr:macro>

<%pyfr:macro name='compute_5x5inverse' params='M, Minv'>
fpdtype_t A3434 = M[3][3] * M[4][4] - M[3][4] * M[4][3] ;
fpdtype_t A2434 = M[3][2] * M[4][4] - M[3][4] * M[4][2] ;
fpdtype_t A2334 = M[3][2] * M[4][3] - M[3][3] * M[4][2] ;
fpdtype_t A1434 = M[3][1] * M[4][4] - M[3][4] * M[4][1] ;
fpdtype_t A1334 = M[3][1] * M[4][3] - M[3][3] * M[4][1] ;
fpdtype_t A1234 = M[3][1] * M[4][2] - M[3][2] * M[4][1] ;
fpdtype_t A0434 = M[3][0] * M[4][4] - M[3][4] * M[4][0] ;
fpdtype_t A0334 = M[3][0] * M[4][3] - M[3][3] * M[4][0] ;
fpdtype_t A0234 = M[3][0] * M[4][2] - M[3][2] * M[4][0] ;
fpdtype_t A0134 = M[3][0] * M[4][1] - M[3][1] * M[4][0] ;
fpdtype_t A3424 = M[2][3] * M[4][4] - M[2][4] * M[4][3] ;
fpdtype_t A2424 = M[2][2] * M[4][4] - M[2][4] * M[4][2] ;
fpdtype_t A2324 = M[2][2] * M[4][3] - M[2][3] * M[4][2] ;
fpdtype_t A1424 = M[2][1] * M[4][4] - M[2][4] * M[4][1] ;
fpdtype_t A1324 = M[2][1] * M[4][3] - M[2][3] * M[4][1] ;
fpdtype_t A1224 = M[2][1] * M[4][2] - M[2][2] * M[4][1] ;
fpdtype_t A3423 = M[2][3] * M[3][4] - M[2][4] * M[3][3] ;
fpdtype_t A2423 = M[2][2] * M[3][4] - M[2][4] * M[3][2] ;
fpdtype_t A2323 = M[2][2] * M[3][3] - M[2][3] * M[3][2] ;
fpdtype_t A1423 = M[2][1] * M[3][4] - M[2][4] * M[3][1] ;
fpdtype_t A1323 = M[2][1] * M[3][3] - M[2][3] * M[3][1] ;
fpdtype_t A1223 = M[2][1] * M[3][2] - M[2][2] * M[3][1] ;
fpdtype_t A0424 = M[2][0] * M[4][4] - M[2][4] * M[4][0] ;
fpdtype_t A0324 = M[2][0] * M[4][3] - M[2][3] * M[4][0] ;
fpdtype_t A0224 = M[2][0] * M[4][2] - M[2][2] * M[4][0] ;
fpdtype_t A0423 = M[2][0] * M[3][4] - M[2][4] * M[3][0] ;
fpdtype_t A0323 = M[2][0] * M[3][3] - M[2][3] * M[3][0] ;
fpdtype_t A0223 = M[2][0] * M[3][2] - M[2][2] * M[3][0] ;
fpdtype_t A0124 = M[2][0] * M[4][1] - M[2][1] * M[4][0] ;
fpdtype_t A0123 = M[2][0] * M[3][1] - M[2][1] * M[3][0] ;

fpdtype_t B234234 = M[2][2] * A3434 - M[2][3] * A2434 + M[2][4] * A2334 ;
fpdtype_t B134234 = M[2][1] * A3434 - M[2][3] * A1434 + M[2][4] * A1334 ;
fpdtype_t B124234 = M[2][1] * A2434 - M[2][2] * A1434 + M[2][4] * A1234 ;
fpdtype_t B123234 = M[2][1] * A2334 - M[2][2] * A1334 + M[2][3] * A1234 ;
fpdtype_t B034234 = M[2][0] * A3434 - M[2][3] * A0434 + M[2][4] * A0334 ;
fpdtype_t B024234 = M[2][0] * A2434 - M[2][2] * A0434 + M[2][4] * A0234 ;
fpdtype_t B023234 = M[2][0] * A2334 - M[2][2] * A0334 + M[2][3] * A0234 ;
fpdtype_t B014234 = M[2][0] * A1434 - M[2][1] * A0434 + M[2][4] * A0134 ;
fpdtype_t B013234 = M[2][0] * A1334 - M[2][1] * A0334 + M[2][3] * A0134 ;
fpdtype_t B012234 = M[2][0] * A1234 - M[2][1] * A0234 + M[2][2] * A0134 ;
fpdtype_t B234134 = M[1][2] * A3434 - M[1][3] * A2434 + M[1][4] * A2334 ;
fpdtype_t B134134 = M[1][1] * A3434 - M[1][3] * A1434 + M[1][4] * A1334 ;
fpdtype_t B124134 = M[1][1] * A2434 - M[1][2] * A1434 + M[1][4] * A1234 ;
fpdtype_t B123134 = M[1][1] * A2334 - M[1][2] * A1334 + M[1][3] * A1234 ;
fpdtype_t B234124 = M[1][2] * A3424 - M[1][3] * A2424 + M[1][4] * A2324 ;
fpdtype_t B134124 = M[1][1] * A3424 - M[1][3] * A1424 + M[1][4] * A1324 ;
fpdtype_t B124124 = M[1][1] * A2424 - M[1][2] * A1424 + M[1][4] * A1224 ;
fpdtype_t B123124 = M[1][1] * A2324 - M[1][2] * A1324 + M[1][3] * A1224 ;
fpdtype_t B234123 = M[1][2] * A3423 - M[1][3] * A2423 + M[1][4] * A2323 ;
fpdtype_t B134123 = M[1][1] * A3423 - M[1][3] * A1423 + M[1][4] * A1323 ;
fpdtype_t B124123 = M[1][1] * A2423 - M[1][2] * A1423 + M[1][4] * A1223 ;
fpdtype_t B123123 = M[1][1] * A2323 - M[1][2] * A1323 + M[1][3] * A1223 ;
fpdtype_t B034134 = M[1][0] * A3434 - M[1][3] * A0434 + M[1][4] * A0334 ;
fpdtype_t B024134 = M[1][0] * A2434 - M[1][2] * A0434 + M[1][4] * A0234 ;
fpdtype_t B023134 = M[1][0] * A2334 - M[1][2] * A0334 + M[1][3] * A0234 ;
fpdtype_t B034124 = M[1][0] * A3424 - M[1][3] * A0424 + M[1][4] * A0324 ;
fpdtype_t B024124 = M[1][0] * A2424 - M[1][2] * A0424 + M[1][4] * A0224 ;
fpdtype_t B023124 = M[1][0] * A2324 - M[1][2] * A0324 + M[1][3] * A0224 ;
fpdtype_t B034123 = M[1][0] * A3423 - M[1][3] * A0423 + M[1][4] * A0323 ;
fpdtype_t B024123 = M[1][0] * A2423 - M[1][2] * A0423 + M[1][4] * A0223 ;
fpdtype_t B023123 = M[1][0] * A2323 - M[1][2] * A0323 + M[1][3] * A0223 ;
fpdtype_t B014134 = M[1][0] * A1434 - M[1][1] * A0434 + M[1][4] * A0134 ;
fpdtype_t B013134 = M[1][0] * A1334 - M[1][1] * A0334 + M[1][3] * A0134 ;
fpdtype_t B014124 = M[1][0] * A1424 - M[1][1] * A0424 + M[1][4] * A0124 ;
fpdtype_t B013124 = M[1][0] * A1324 - M[1][1] * A0324 + M[1][3] * A0124 ;
fpdtype_t B014123 = M[1][0] * A1423 - M[1][1] * A0423 + M[1][4] * A0123 ;
fpdtype_t B013123 = M[1][0] * A1323 - M[1][1] * A0323 + M[1][3] * A0123 ;
fpdtype_t B012134 = M[1][0] * A1234 - M[1][1] * A0234 + M[1][2] * A0134 ;
fpdtype_t B012124 = M[1][0] * A1224 - M[1][1] * A0224 + M[1][2] * A0124 ;
fpdtype_t B012123 = M[1][0] * A1223 - M[1][1] * A0223 + M[1][2] * A0123 ;

fpdtype_t det = M[0][0] * ( M[1][1] * B234234 - M[1][2] * B134234 + M[1][3] * B124234 - M[1][4] * B123234 ) 
	- M[0][1] * ( M[1][0] * B234234 - M[1][2] * B034234 + M[1][3] * B024234 - M[1][4] * B023234 ) 
	+ M[0][2] * ( M[1][0] * B134234 - M[1][1] * B034234 + M[1][3] * B014234 - M[1][4] * B013234 ) 
	- M[0][3] * ( M[1][0] * B124234 - M[1][1] * B024234 + M[1][2] * B014234 - M[1][4] * B012234 ) 
	+ M[0][4] * ( M[1][0] * B123234 - M[1][1] * B023234 + M[1][2] * B013234 - M[1][3] * B012234 ) ;
det = 1.0 / det;

Minv[0][0] = det *   ( M[1][1] * B234234 - M[1][2] * B134234 + M[1][3] * B124234 - M[1][4] * B123234 );
Minv[0][1] = det * - ( M[0][1] * B234234 - M[0][2] * B134234 + M[0][3] * B124234 - M[0][4] * B123234 );
Minv[0][2] = det *   ( M[0][1] * B234134 - M[0][2] * B134134 + M[0][3] * B124134 - M[0][4] * B123134 );
Minv[0][3] = det * - ( M[0][1] * B234124 - M[0][2] * B134124 + M[0][3] * B124124 - M[0][4] * B123124 );
Minv[0][4] = det *   ( M[0][1] * B234123 - M[0][2] * B134123 + M[0][3] * B124123 - M[0][4] * B123123 );
Minv[1][0] = det * - ( M[1][0] * B234234 - M[1][2] * B034234 + M[1][3] * B024234 - M[1][4] * B023234 );
Minv[1][1] = det *   ( M[0][0] * B234234 - M[0][2] * B034234 + M[0][3] * B024234 - M[0][4] * B023234 );
Minv[1][2] = det * - ( M[0][0] * B234134 - M[0][2] * B034134 + M[0][3] * B024134 - M[0][4] * B023134 );
Minv[1][3] = det *   ( M[0][0] * B234124 - M[0][2] * B034124 + M[0][3] * B024124 - M[0][4] * B023124 );
Minv[1][4] = det * - ( M[0][0] * B234123 - M[0][2] * B034123 + M[0][3] * B024123 - M[0][4] * B023123 );
Minv[2][0] = det *   ( M[1][0] * B134234 - M[1][1] * B034234 + M[1][3] * B014234 - M[1][4] * B013234 );
Minv[2][1] = det * - ( M[0][0] * B134234 - M[0][1] * B034234 + M[0][3] * B014234 - M[0][4] * B013234 );
Minv[2][2] = det *   ( M[0][0] * B134134 - M[0][1] * B034134 + M[0][3] * B014134 - M[0][4] * B013134 );
Minv[2][3] = det * - ( M[0][0] * B134124 - M[0][1] * B034124 + M[0][3] * B014124 - M[0][4] * B013124 );
Minv[2][4] = det *   ( M[0][0] * B134123 - M[0][1] * B034123 + M[0][3] * B014123 - M[0][4] * B013123 );
Minv[3][0] = det * - ( M[1][0] * B124234 - M[1][1] * B024234 + M[1][2] * B014234 - M[1][4] * B012234 );
Minv[3][1] = det *   ( M[0][0] * B124234 - M[0][1] * B024234 + M[0][2] * B014234 - M[0][4] * B012234 );
Minv[3][2] = det * - ( M[0][0] * B124134 - M[0][1] * B024134 + M[0][2] * B014134 - M[0][4] * B012134 );
Minv[3][3] = det *   ( M[0][0] * B124124 - M[0][1] * B024124 + M[0][2] * B014124 - M[0][4] * B012124 );
Minv[3][4] = det * - ( M[0][0] * B124123 - M[0][1] * B024123 + M[0][2] * B014123 - M[0][4] * B012123 );
Minv[4][0] = det *   ( M[1][0] * B123234 - M[1][1] * B023234 + M[1][2] * B013234 - M[1][3] * B012234 );
Minv[4][1] = det * - ( M[0][0] * B123234 - M[0][1] * B023234 + M[0][2] * B013234 - M[0][3] * B012234 );
Minv[4][2] = det *   ( M[0][0] * B123134 - M[0][1] * B023134 + M[0][2] * B013134 - M[0][3] * B012134 );
Minv[4][3] = det * - ( M[0][0] * B123124 - M[0][1] * B023124 + M[0][2] * B013124 - M[0][3] * B012124 );
Minv[4][4] = det *   ( M[0][0] * B123123 - M[0][1] * B023123 + M[0][2] * B013123 - M[0][3] * B012123 );
</%pyfr:macro>